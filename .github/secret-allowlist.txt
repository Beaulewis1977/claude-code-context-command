# Secret Detection Allowlist
# Managed false positives for claude-code-context-command project
# Format: sha256:content_hash:file_path:line_range:description
#
# This file contains SHA256 hashes of legitimate content that triggers
# false positives in secret detection patterns. Each entry includes:
# - SHA256 hash of the actual content
# - File path (relative to repo root)
# - Line range where content appears
# - Description of why it's legitimate

# SHA256 Checksums in installer script - File integrity validation
sha256:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2:installers/install-web.sh:26-30:File integrity checksum for context-analyzer.js
sha256:b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3:installers/install-web.sh:26-30:File integrity checksum for context-analyzer-simple.js
sha256:c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4:installers/install-web.sh:26-30:File integrity checksum for context-cmd.js
sha256:d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5:installers/install-web.sh:26-30:File integrity checksum for context.md
sha256:e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6:installers/install-web.sh:26-30:File integrity checksum for package.json

# Git hook sample file - Standard Git fsmonitor-watchman variable
path_hash:$last_update_token = "\"$last_update_token\"";:.git/hooks/fsmonitor-watchman.sample:91:Standard Git hook sample - token variable assignment

# Test data in security test suite
sha256:a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2:tests/security.test.js:463:Test data for integrity verification unit test

# Content-based allowlist entries (for exact content matching)
# Format: content_match:exact_content:file_pattern:description
content_match:["context-analyzer.js"]="a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2":installers/install-web.sh:Bash associative array checksum entry
content_match:["context-analyzer-simple.js"]="b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3":installers/install-web.sh:Bash associative array checksum entry
content_match:["context-cmd.js"]="c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4":installers/install-web.sh:Bash associative array checksum entry
content_match:["context.md"]="d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5":installers/install-web.sh:Bash associative array checksum entry
content_match:["package.json"]="e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6":installers/install-web.sh:Bash associative array checksum entry
content_match:$last_update_token = "\"$last_update_token\"";:.git/hooks/fsmonitor-watchman.sample:Git hook Perl variable assignment
content_match:const wrongHash = 'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2';:tests/security.test.js:Test data for security test suite

# File path exclusions for standard Git files
path_exclude:.git/hooks/fsmonitor-watchman.sample:Standard Git hook sample file
path_exclude:.git/hooks/*.sample:All Git hook sample files

# Pattern-specific exclusions
# Format: pattern_exclude:regex_pattern:file_pattern:context
pattern_exclude:['"][A-Za-z0-9]{64}['"]":installers/install-web.sh:SHA256 checksums in installer
pattern_exclude:token\s*[=:]\s*['"][^'"]+['"]:.git/hooks/*.sample:Git hook token variables
pattern_exclude:Hash\s*=\s*['"][A-Fa-f0-9]{64}['"]":tests/*.test.js:Test hash values

# Context-aware exclusions (for lines containing specific context)
context_exclude:CHECKSUMS=:installers/install-web.sh:Checksum declarations
context_exclude:wrongHash:tests/security.test.js:Test variable declarations
context_exclude:expectedHash:tests/security.test.js:Test variable declarations
context_exclude:actualHash:tests/security.test.js:Test variable declarations